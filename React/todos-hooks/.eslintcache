[{"C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\index.js":"1","C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\App.js":"2","C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\components\\todo\\TodoList.js":"3","C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\components\\todo\\api\\useAPI.js":"4"},{"size":267,"mtime":1608125117702,"results":"5","hashOfConfig":"6"},{"size":2024,"mtime":1608214762970,"results":"7","hashOfConfig":"6"},{"size":2937,"mtime":1608213781677,"results":"8","hashOfConfig":"6"},{"size":418,"mtime":1608208050256,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"bi7oyi",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\index.js",[],["21","22"],"C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\App.js",["23"],"C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\components\\todo\\TodoList.js",["24","25"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport useAPI from './api/useAPI';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { TodosContext } from './../../App';\r\nimport { Table, Form, Button } from 'react-bootstrap';\r\n\r\nconst TodoList = () => {\r\n  //using the useContext() we receiving state and dispatch from App.js\r\n  const { state, dispatch } = useContext(TodosContext);\r\n  //Using useState()\r\n  const [todoText, setTodoText] = useState('');\r\n  //Edit state\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editTodo, setEditTodo] = useState(null);\r\n\r\n  //button switch between 'Edit' and 'Add'\r\n  const buttonTitle = editMode ? 'Edit' : 'Add';\r\n\r\n  //using the endpoint\r\n  const endpoint = 'http://localhost:3000/todos/';\r\n  const savedTodos = useAPI(endpoint);\r\n\r\n  //Use useEffect()\r\n  useEffect(() => {\r\n    dispatch({ type: 'get', payload: savedTodos });\r\n  }, [savedTodos]);\r\n\r\n  //Handle handleSubmit()\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (editMode) {\r\n      await axios.patch(endpoint + editTodo.id, { text: todoText });\r\n      dispatch({ type: 'edit', payload: { ...editTodo, text: todoText } });\r\n      setEditMode(false);\r\n      setEditTodo(null);\r\n    } else {\r\n      const newTodo = { id: uuidv4(), text: todoText };\r\n      const response = await axios.post(endpoint, newTodo);\r\n      dispatch({ type: 'add', payload: newTodo });\r\n    }\r\n    setTodoText('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter To Do'\r\n            onChange={(event) => setTodoText(event.target.value)}\r\n            value={todoText}\r\n          />\r\n        </Form.Group>\r\n        <Button variant='primary' type='submit'>\r\n          {buttonTitle}\r\n        </Button>\r\n      </Form>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>To do</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.todos.map((todo) => (\r\n            <tr key={todo.id}>\r\n              <td>{todo.text}</td>\r\n              <td\r\n                onClick={() => {\r\n                  setTodoText(todo.text);\r\n                  setEditMode(true);\r\n                  setEditTodo(todo);\r\n                }}>\r\n                <Button variant='link'>Edit</Button>\r\n              </td>\r\n              <td\r\n                onClick={async () => {\r\n                  await axios.delete(endpoint + todo.id);\r\n                  dispatch({ type: 'delete', payload: todo }); //payload holds the actual data in the redux action object\r\n                }}>\r\n                <Button variant='link'>Delete</Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","C:\\xampp\\htdocs\\JAVASCRIPT\\React\\todos-hooks\\src\\components\\todo\\api\\useAPI.js",["26"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useAPI = (endpoint) => {\r\n  const [data, setData] = useState([]);\r\n  //To call data when component is mounted\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const res = await axios.get(endpoint);\r\n    setData(res.data);\r\n  };\r\n  console.log(data);\r\n  return data;\r\n};\r\n\r\nexport default useAPI;\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":16,"nodeType":"33","messageId":"34","endLine":3,"endColumn":22},{"ruleId":"35","severity":1,"message":"36","line":27,"column":6,"nodeType":"37","endLine":27,"endColumn":18,"suggestions":"38"},{"ruleId":"31","severity":1,"message":"39","line":39,"column":13,"nodeType":"33","messageId":"34","endLine":39,"endColumn":21},{"ruleId":"35","severity":1,"message":"40","line":9,"column":6,"nodeType":"37","endLine":9,"endColumn":8,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["44"],"'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"48","fix":"49"},"Update the dependencies array to be: [dispatch, savedTodos]",{"range":"50","text":"51"},"Update the dependencies array to be: [getData]",{"range":"52","text":"53"},[931,943],"[dispatch, savedTodos]",[235,237],"[getData]"]